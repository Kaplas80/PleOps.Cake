trigger:
  branches:
    include:
    - develop
    - refs/pull/*

variables:
  buildConfiguration: 'Release'
  netCoreSdk: '3.1.301'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'
  DOTNET_CLI_TELEMETRY_OPTOUT: 'true'

jobs:
  - job: 'build_lin'
    displayName: "Build"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UseDotNet@2
        displayName: "Get .NET SDK"
        inputs:
          packageType: 'sdk'
          version: '$(netCoreSdk)'

      - script: ./build.sh --target=Create-Artifacts --configuration=$(buildConfiguration) --artifacts=$(Build.ArtifactStagingDirectory)
        displayName: "Build and create artifacts"

      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'artifacts'
          publishLocation: 'Container'

  - job: 'preview_release'
    displayName: 'Create preview release'
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: ['build_lin']
    condition: "and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))"
    steps:
      - task: UseDotNet@2
        displayName: "Get .NET SDK"
        inputs:
          packageType: 'sdk'
          version: '$(netCoreSdk)'

      - task: DownloadBuildArtifacts@0
        displayName: 'Get build artifacts'
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'artifacts'
          downloadPath: '$(Build.ArtifactStagingDirectory)'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'push'
          searchPatternPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
          nuGetFeedType: 'internal'
          publishVstsFeed: '339c91a8-9d6c-4082-8b1a-93c2ae76b637/f434f007-6349-4876-9d16-e00ec2460ec0'
