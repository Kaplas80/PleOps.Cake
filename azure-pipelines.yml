trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'
  DOTNET_CLI_TELEMETRY_OPTOUT: 'true'


steps:

- task: UseDotNet@2
  displayName: "Get .NET SDK"
  inputs:
    packageType: 'sdk'
    version: '3.1.300'

- script: dotnet tool install --global Cake.Tool
  displayName: 'Install Cake tool'

- script: dotnet cake --target=Prepare-Release --artifacts=$(Build.ArtifactStagingDirectory)
  displayName: "Build, test and pack"

- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '339c91a8-9d6c-4082-8b1a-93c2ae76b637/e3acf8ba-ec70-46f0-b1a5-da1ce3dd5d9f'

- task: PublishTestResults@2
  displayName: "Publish test results"
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '*.trx'
    searchFolder: 'TestResults'
    failTaskOnFailedTests: true
    publishRunAttachments: false

- task: PublishCodeCoverageResults@1
  displayName: "Publish code coverage"
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'TestResults/coverage/Cobertura.xml'
    failIfCoverageEmpty: true

- task: PublishBuildArtifacts@1
  displayName: "Publish artifacts"
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'artifacts'
    publishLocation: 'Container'
