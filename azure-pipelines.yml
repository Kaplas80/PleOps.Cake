pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  netCoreSdk: '3.1.301'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'
  DOTNET_CLI_TELEMETRY_OPTOUT: 'true'

jobs:
  - job: 'build_lin'
    displayName: "[Linux] Build & Test"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UseDotNet@2
        displayName: "Get .NET SDK"
        inputs:
          packageType: 'sdk'
          version: '$(netCoreSdk)'

      - script: ./build.sh --target=Create-Artifacts --configuration=$(buildConfiguration) --artifacts=$(Build.ArtifactStagingDirectory)
        displayName: "Build, test and create artifacts"

      - task: PublishTestResults@2
        displayName: "Publish test results"
        inputs:
          testResultsFormat: 'VSTest'
          testResultsFiles: '*.trx'
          searchFolder: 'TestResults'
          failTaskOnFailedTests: true
          publishRunAttachments: false

      - task: PublishCodeCoverageResults@1
        displayName: "Publish code coverage"
        inputs:
          codeCoverageTool: 'Cobertura'
          summaryFileLocation: 'test_results/coverage/Cobertura.xml'
          failIfCoverageEmpty: true

      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'artifacts'
          publishLocation: 'Container'

  - job: 'build_mac'
    displayName: "[MacOS] Build & Test"
    pool:
      vmImage: 'macOs-latest'
    steps:
      - task: UseDotNet@2
        displayName: "Get .NET SDK"
        inputs:
          packageType: 'sdk'
          version: '$(netCoreSdk)'

      - script: ./build.sh --target=Build-Test --configuration=$(buildConfiguration)
        displayName: "Build & test"

  - job: 'build_win'
    displayName: "[Windows] Build & Test"
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: UseDotNet@2
        displayName: "Get .NET SDK"
        inputs:
          packageType: 'sdk'
          version: '$(netCoreSdk)'

      - powershell: .\build.ps1 --target="Build-Test" --configuration=$(buildConfiguration)
        displayName: "Build & test"

  - job: 'preview_release'
    displayName: 'Create preview release'
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: ['build_win', 'build_lin', 'build_mac']
    steps:
      - task: UseDotNet@2
        displayName: "Get .NET SDK"
        inputs:
          packageType: 'sdk'
          version: '$(netCoreSdk)'

      - task: DownloadBuildArtifacts@0
        displayName: 'Get build artifacts'
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'artifacts'
          downloadPath: '$(Build.ArtifactStagingDirectory)'

      - task: DotNetCoreCLI@2
        displayName: 'Publish in preview feed'
        inputs:
          command: 'push'
          searchPatternPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
          nuGetFeedType: 'internal'
          publishVstsFeed: '339c91a8-9d6c-4082-8b1a-93c2ae76b637/e3acf8ba-ec70-46f0-b1a5-da1ce3dd5d9f'
